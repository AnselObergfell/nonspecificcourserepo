{"ast":null,"code":"var _jsxFileName = \"/home/ansel/450/final/src/Child2.js\";\n// GraphComponent.js\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Child2 extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {}\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      const {\n        data,\n        selectedCompany\n      } = this.props;\n      const parsedData = data[selectedCompany].map(item => {\n        var parseDate = d3.timeParse(\"%Y-%m-%d\");\n        item.Date = parseDate(item.Date);\n        item.Open = parseFloat(item.Open);\n        item.Close = parseFloat(item.Close);\n        return item;\n      });\n      const x_axis_data = parsedData.map(item => item.Date);\n      const open_data = parsedData.map(item => item.Open);\n      const close_data = parsedData.map(item => item.Close);\n      const open_close_combined = [...open_data, ...close_data];\n      const x_scale = d3.scaleTime().domain(d3.extent(x_axis_data)).range([0, 400]);\n      const y_scale = d3.scaleLinear().domain(d3.extent(open_close_combined)).range([300, 0]);\n      const colormap = {\n        \"open\": \"green\",\n        \"close\": \"red\"\n      };\n      svg.selectAll('.lines_g').data([parsedData, parsedData]).join('g').attr('class', 'lines_g').each(function (area_chart_data, i) {\n        const line = d3.line().x(d => x_scale(d.Date)).y(d => i === 0 ? y_scale(d.Open) : y_scale(d.Close));\n        d3.select(this).selectAll('.line').data([area_chart_data]).join('path').attr(\"class\", \"line\").attr(\"d\", line).attr(\"fill\", 'none').attr('stroke', i === 0 ? 'green' : 'red').attr('stroke-width', 1);\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: this.myRef,\n      width: \"500\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default GraphComponent;","map":{"version":3,"names":["React","Component","d3","jsxDEV","_jsxDEV","Child2","constructor","props","componentDidMount","componentDidUpdate","prevProps","data","selectedCompany","parsedData","map","item","parseDate","timeParse","Date","Open","parseFloat","Close","x_axis_data","open_data","close_data","open_close_combined","x_scale","scaleTime","domain","extent","range","y_scale","scaleLinear","colormap","svg","selectAll","join","attr","each","area_chart_data","i","line","x","d","y","select","render","ref","myRef","width","height","fileName","_jsxFileName","lineNumber","columnNumber","GraphComponent"],"sources":["/home/ansel/450/final/src/Child2.js"],"sourcesContent":["// GraphComponent.js\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass Child2 extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n      \n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n          const { data, selectedCompany } = this.props;\n\n          const parsedData = data[selectedCompany].map(item => {\n              var parseDate = d3.timeParse(\"%Y-%m-%d\");\n              item.Date = parseDate(item.Date);\n              item.Open = parseFloat(item.Open);\n              item.Close = parseFloat(item.Close);\n              return item;\n          });\n    \n          const x_axis_data = parsedData.map(item => item.Date);\n          const open_data = parsedData.map(item => item.Open);\n          const close_data = parsedData.map(item => item.Close);\n          const open_close_combined = [...open_data, ...close_data];\n    \n          const x_scale = d3.scaleTime().domain(d3.extent(x_axis_data)).range([0, 400]);\n          const y_scale = d3.scaleLinear().domain(d3.extent(open_close_combined)).range([300, 0]);\n          const colormap = { \"open\": \"green\", \"close\": \"red\" };\n    \n          svg.selectAll('.lines_g').data([parsedData, parsedData]).join('g')\n              .attr('class', 'lines_g')\n              .each(function(area_chart_data, i) {\n                  const line = d3.line()\n                      .x(d => x_scale(d.Date))\n                      .y(d => i === 0 ? y_scale(d.Open) : y_scale(d.Close));\n                  d3.select(this).selectAll('.line')\n                      .data([area_chart_data])\n                      .join('path')\n                      .attr(\"class\", \"line\")\n                      .attr(\"d\", line)\n                      .attr(\"fill\", 'none')\n                      .attr('stroke', i === 0 ? 'green' : 'red')\n                      .attr('stroke-width', 1);\n              });\n        }\n    }\n\n    render() {\n        return <svg ref={this.myRef} width=\"500\" height=\"300\"></svg>;\n    }\n}\n\nexport default GraphComponent;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAC3BK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;EAChB;EAEAC,iBAAiBA,CAAA,EAAG,CAEpB;EAEAC,kBAAkBA,CAACC,SAAS,EAAE;IAC1B,IAAIA,SAAS,CAACC,IAAI,KAAK,IAAI,CAACJ,KAAK,CAACI,IAAI,EAAE;MACtC,MAAM;QAAEA,IAAI;QAAEC;MAAgB,CAAC,GAAG,IAAI,CAACL,KAAK;MAE5C,MAAMM,UAAU,GAAGF,IAAI,CAACC,eAAe,CAAC,CAACE,GAAG,CAACC,IAAI,IAAI;QACjD,IAAIC,SAAS,GAAGd,EAAE,CAACe,SAAS,CAAC,UAAU,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGF,SAAS,CAACD,IAAI,CAACG,IAAI,CAAC;QAChCH,IAAI,CAACI,IAAI,GAAGC,UAAU,CAACL,IAAI,CAACI,IAAI,CAAC;QACjCJ,IAAI,CAACM,KAAK,GAAGD,UAAU,CAACL,IAAI,CAACM,KAAK,CAAC;QACnC,OAAON,IAAI;MACf,CAAC,CAAC;MAEF,MAAMO,WAAW,GAAGT,UAAU,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,IAAI,CAAC;MACrD,MAAMK,SAAS,GAAGV,UAAU,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,IAAI,CAAC;MACnD,MAAMK,UAAU,GAAGX,UAAU,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACM,KAAK,CAAC;MACrD,MAAMI,mBAAmB,GAAG,CAAC,GAAGF,SAAS,EAAE,GAAGC,UAAU,CAAC;MAEzD,MAAME,OAAO,GAAGxB,EAAE,CAACyB,SAAS,CAAC,CAAC,CAACC,MAAM,CAAC1B,EAAE,CAAC2B,MAAM,CAACP,WAAW,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC7E,MAAMC,OAAO,GAAG7B,EAAE,CAAC8B,WAAW,CAAC,CAAC,CAACJ,MAAM,CAAC1B,EAAE,CAAC2B,MAAM,CAACJ,mBAAmB,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;MACvF,MAAMG,QAAQ,GAAG;QAAE,MAAM,EAAE,OAAO;QAAE,OAAO,EAAE;MAAM,CAAC;MAEpDC,GAAG,CAACC,SAAS,CAAC,UAAU,CAAC,CAACxB,IAAI,CAAC,CAACE,UAAU,EAAEA,UAAU,CAAC,CAAC,CAACuB,IAAI,CAAC,GAAG,CAAC,CAC7DC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBC,IAAI,CAAC,UAASC,eAAe,EAAEC,CAAC,EAAE;QAC/B,MAAMC,IAAI,GAAGvC,EAAE,CAACuC,IAAI,CAAC,CAAC,CACjBC,CAAC,CAACC,CAAC,IAAIjB,OAAO,CAACiB,CAAC,CAACzB,IAAI,CAAC,CAAC,CACvB0B,CAAC,CAACD,CAAC,IAAIH,CAAC,KAAK,CAAC,GAAGT,OAAO,CAACY,CAAC,CAACxB,IAAI,CAAC,GAAGY,OAAO,CAACY,CAAC,CAACtB,KAAK,CAAC,CAAC;QACzDnB,EAAE,CAAC2C,MAAM,CAAC,IAAI,CAAC,CAACV,SAAS,CAAC,OAAO,CAAC,CAC7BxB,IAAI,CAAC,CAAC4B,eAAe,CAAC,CAAC,CACvBH,IAAI,CAAC,MAAM,CAAC,CACZC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,GAAG,EAAEI,IAAI,CAAC,CACfJ,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAEG,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,CACzCH,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;MAChC,CAAC,CAAC;IACR;EACJ;EAEAS,MAAMA,CAAA,EAAG;IACL,oBAAO1C,OAAA;MAAK2C,GAAG,EAAE,IAAI,CAACC,KAAM;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAChE;AACJ;AAEA,eAAeC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}