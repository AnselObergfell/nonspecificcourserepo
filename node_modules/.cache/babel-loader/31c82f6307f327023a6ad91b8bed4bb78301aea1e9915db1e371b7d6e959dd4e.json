{"ast":null,"code":"var _jsxFileName = \"/home/ansel/450/final/src/App.js\";\n// App component\nimport React, { Component } from 'react';\nimport Child1 from './Child1';\nimport Child2 from './Child2';\nimport * as d3 from 'd3';\nimport Data from './data/SampleDataset.csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n  componentDidMount() {\n    Promise.all([d3.csv(Sample)]).then(resolved_data => {\n      var temp_data = {\n        Apple: resolved_data[0],\n        Amazon: resolved_data[1],\n        Google: resolved_data[2],\n        Meta: resolved_data[3],\n        Microsoft: resolved_data[4]\n      };\n      this.setState({\n        all_data: temp_data\n      });\n    }).catch(error => console.error(\"Error loading data: \", error));\n  }\n  conponentDidUpdate() {}\n  render() {\n    const {\n      all_data,\n      selected_company,\n      parsedData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: event => this.setState({\n          selected_company: event.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Apple\",\n          children: \"Apple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Amazon\",\n          children: \"Amazon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Google\",\n          children: \"Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Meta\",\n          children: \"Meta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Microsoft\",\n          children: \"Microsoft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), parsedData && all_data[selected_company] && /*#__PURE__*/_jsxDEV(Child1, {\n        data: all_data,\n        selectedCompany: selected_company,\n        parsedData: parsedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 62\n      }, this), parsedData && all_data[selected_company] && /*#__PURE__*/_jsxDEV(Child2, {\n        data: all_data,\n        selectedCompany: selected_company,\n        parsedData: parsedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Child1","Child2","d3","Data","jsxDEV","_jsxDEV","App","constructor","props","state","data","componentDidMount","Promise","all","csv","Sample","then","resolved_data","temp_data","Apple","Amazon","Google","Meta","Microsoft","setState","all_data","catch","error","console","conponentDidUpdate","render","selected_company","parsedData","children","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","selectedCompany"],"sources":["/home/ansel/450/final/src/App.js"],"sourcesContent":["// App component\nimport React, { Component } from 'react';\nimport Child1 from './Child1';\nimport Child2 from './Child2';\nimport * as d3 from 'd3';\nimport Data from './data/SampleDataset.csv';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { data: {}};\n    }\n\n    componentDidMount() {\n        Promise.all([d3.csv(Sample)])\n            .then(resolved_data => {\n                var temp_data = {\n                    Apple: resolved_data[0],\n                    Amazon: resolved_data[1],\n                    Google: resolved_data[2],\n                    Meta: resolved_data[3],\n                    Microsoft: resolved_data[4]\n                };\n                this.setState({ all_data: temp_data });\n            })\n            .catch(error => console.error(\"Error loading data: \", error));\n    }\n    conponentDidUpdate(){}\n    render() {\n        const {all_data, selected_company, parsedData} = this.state;\n        return (\n            <div>\n                <select onChange={(event) => this.setState({ selected_company: event.target.value })}>\n                    <option value=\"Apple\">Apple</option>\n                    <option value=\"Amazon\">Amazon</option>\n                    <option value=\"Google\">Google</option>\n                    <option value=\"Meta\">Meta</option>\n                    <option value=\"Microsoft\">Microsoft</option>\n                </select>\n                {parsedData && all_data[selected_company] && <Child1 data={all_data} selectedCompany={selected_company} parsedData={parsedData} />}\n                {parsedData && all_data[selected_company] && <Child2 data={all_data} selectedCompany={selected_company} parsedData={parsedData} />}\n                \n            </div>\n        );\n    }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}