{"ast":null,"code":"var _jsxFileName = \"/home/ansel/450/ReactApp1/src/App.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport AAPL from './data/AAPL.csv';\nimport AMZN from './data/AMZN.csv';\nimport GOOGL from './data/GOOGL.csv';\nimport META from './data/META.csv';\nimport MSFT from './data/MSFT.csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all_data: {},\n      selected_company: \"Google\"\n    };\n  }\n  componentDidMount() {\n    Promise.all([d3.csv(AAPL), d3.csv(AMZN), d3.csv(GOOGL), d3.csv(META), d3.csv(MSFT)]).then(resolved_data => {\n      var temp_data = {\n        Apple: resolved_data[0],\n        Amazon: resolved_data[1],\n        Google: resolved_data[2],\n        Meta: resolved_data[3],\n        Microsoft: resolved_data[4]\n      };\n      this.setState({\n        all_data: temp_data\n      });\n    }).catch(error => console.error(\"Error loading data: \", error));\n  }\n  componentDidUpdate() {\n    console.log(this.state.all_data);\n    var data = this.state.all_data[this.state.selected_company].map(item => {\n      var parseDate = d3.timeParse(\"%Y-%m-%d\");\n      item.Date = parseDate(item.Date);\n      item.Open = parseFloat(item.Open);\n      item.Close = parseFloat(item.Close);\n      return item;\n    });\n    var x_axis_data = data.map(item => item.Date);\n    var open_data = data.map(item => item.Open);\n    var close_data = data.map(item => item.Close);\n    var open_close_combined = [...open_data, ...close_data];\n    var x_scale = d3.scaleTime().domain(d3.extent(x_axis_data).range([0, 400]));\n    var y_scale = d3.scaleLinear().domain(d3.extent(open_close_combined).range([0, 300]));\n    var colormap = {\n      \"open\": \"green\",\n      \"close\": \"red\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: event => this.setState({\n          selected_company: event.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Apple \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Amazon \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Google \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Meta \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Microsoft \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"demo2\",\n        width: \"300\",\n        height: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","d3","AAPL","AMZN","GOOGL","META","MSFT","jsxDEV","_jsxDEV","App","constructor","props","state","all_data","selected_company","componentDidMount","Promise","all","csv","then","resolved_data","temp_data","Apple","Amazon","Google","Meta","Microsoft","setState","catch","error","console","componentDidUpdate","log","data","map","item","parseDate","timeParse","Date","Open","parseFloat","Close","x_axis_data","open_data","close_data","open_close_combined","x_scale","scaleTime","domain","extent","range","y_scale","scaleLinear","colormap","render","children","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height"],"sources":["/home/ansel/450/ReactApp1/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport AAPL from './data/AAPL.csv';\nimport AMZN from './data/AMZN.csv';\nimport GOOGL from './data/GOOGL.csv';\nimport META from './data/META.csv';\nimport MSFT from './data/MSFT.csv';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      all_data: {}, selected_company:\"Google\"\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([d3.csv(AAPL), d3.csv(AMZN), d3.csv(GOOGL), d3.csv(META), d3.csv(MSFT)]).then(resolved_data => {\n      var temp_data ={Apple: resolved_data[0], Amazon: resolved_data[1], Google: resolved_data[2], Meta: resolved_data[3], Microsoft: resolved_data[4]};\n      this.setState({all_data: temp_data});\n\n    }).catch(error => console.error(\"Error loading data: \", error));\n  }\n  componentDidUpdate(){\n    console.log(this.state.all_data)\n    \n    var data = this.state.all_data[this.state.selected_company].map(item=>{\n      var parseDate = d3.timeParse(\"%Y-%m-%d\")\n      item.Date = parseDate(item.Date)\n      item.Open = parseFloat(item.Open)\n      item.Close = parseFloat(item.Close)\n      return item\n    })\n    var x_axis_data = data.map(item => item.Date);\n    var open_data = data.map(item=>item.Open)\n    var close_data = data.map(item=>item.Close)\n    var open_close_combined= [...open_data,...close_data]\n    var x_scale = d3.scaleTime().domain(d3.extent(x_axis_data).range([0,400]))\n    var y_scale = d3.scaleLinear().domain(d3.extent(open_close_combined).range([0,300]))\n    var colormap={\"open\":\"green\", \"close\":\"red\"}\n  }\n  render() {\n    return (\n      <div>\n      <select onChange={(event) => this.setState({selected_company:event.target.value})}> \n        <option> Apple </option>\n        <option> Amazon </option>\n        <option> Google </option>\n        <option> Meta </option>\n        <option> Microsoft </option>\n      </select>\n      <svg id=\"demo2\" width=\"300\" height=\"300\"></svg>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}